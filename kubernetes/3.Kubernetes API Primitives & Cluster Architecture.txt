two type of nodes
1.master node

-Kubernatives object are persisent entities in kubernetes system

-uses these entities to represt the state of the system
i.e
  -they can describe 
    -what application is running
    -which nodes those application are running on
    -policies around those nodes

***Kubernetes object are "records of intent"
 i.e it tell us the desired state of cluster
 Once we create a object kubenetes system continuously tries to make sure that the object exist

******TO work with K8s object (add,modify or delete) u need the K8s api
**************************kubectl makes the necessary api calls for u
************KUBECTL*************88
*********************************************

*******
Every k8s objects includes 2 nested objects
 1.Object spec(specification)we provide
   -provided to k8s
   - describes the desired state of objects
 2. object status
    -provided by k8s
    -describes the actual state of the object
 ***************
 kubectl converts the yaml to json when creating a api request


 ****common kubernetes object
 -nodes -which represt the host which make up the cluster
 -pods -which represts the single instaces of application controller 
 -deployments -represent load balance sets of pods
 -services -which expose deplyments to the external networks usally a through a 3rd party load balancer
-ConfigMaps
*******************Objects Name and UIDS****
  all obejts are identified by name or a UID
  Names
  -all objects hvae unique name (spacially unique? given kind can have only unique name)
  -clinet provided
  -can be reused
  -max lenght 253 char
  -lower case aplhanumeric (- . allowed)
UIDS
 - all obj have unique ids
 -generated by kubernetes
 -spatially and temperorally unique







 ***********NODES***
 Nodes
 -Any worker machine in kubernetes and previously valled minions
 -might be a vm or a physical machine
 -each node has services neccessary to run pods ****
 -and is managed by the master	
 *****-services neccesary in a node is
  -container runtime like docker or rocket
  -kubelet -which orcherstrates the container on a worker node
  -kube-proxy -handles networking too and fro from the container
  ****nodes are not inherently created by kubernetes ,its crated by cloud provider
  **when kubernetes creates a nodes it creates a object which represt the nodes
   -after creattion kubernetes checks whether the node is valid or not


**********Node cOntroller ************
 -is kubernetes master controller which manges the various aspect of nodes..it does
 -assign a CIDR Block to a newly registered node (if its turned on)
 -keeps track of the nodes
 -monitor node health
 -evicts taint nodes based on current 
 -can taint nodes based on current conditions in more recent versions

